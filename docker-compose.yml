version: '3.8'

services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  backend:
    build: ./backend
    volumes:
      - ./backend:/app
    environment:
      - APP_AUTH_CLIENT_ID
      - APP_AUTH_CLIENT_SECRET
      - APP_AUTH_REDIRECT_URI
      - APP_DB_HOST
      - APP_DB_PORT
      - APP_DB_NAME
      - APP_DB_USER
      - APP_DB_PASSWORD
      - APP_SECRET_KEY
      - DJANGO_SETTINGS_MODULE=transcendence.settings
      - REDIS_URL
      - EMAIL_BACKEND
      - EMAIL_HOST
      - EMAIL_PORT
      - EMAIL_USE_TLS
      - EMAIL_HOST_USER
      - EMAIL_HOST_PASSWORD
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  db:
    image: postgres:16-alpine
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
  
  vault:
    image: hashicorp/vault:latest
    ports:
      - "8201:8201"
    environment:
      VAULT_ADDR: 'http://0.0.0.0:8201'
      VAULT_LOCAL_CONFIG: '{"listener": [{"tcp":{"address": "0.0.0.0:8201","tls_disable":"true"}}], "default_lease_ttl": "168h", "max_lease_ttl": "720h", "ui": true}'
      VAULT_DEV_ROOT_TOKEN_ID: '00000000-0000-0000-0000-000000000000'
      VAULT_TOKEN: '00000000-0000-0000-0000-000000000000'
    cap_add:
      - IPC_LOCK
    volumes:
      - vault-volume:/data
    command: server -dev -dev-root-token-id="00000000-0000-0000-0000-000000000000"

  reverseproxy:
    ports:
      - '80:80'
    volumes:
      - ./frontend/nginx/proxy.conf:/etc/nginx/conf.d/proxy.conf:ro
      - ./frontend/nginx/modsec/modsecurity.conf:/etc/nginx/modsec/modsecurity.conf:ro
      - ./frontend/nginx/rules/rules.conf:/etc/nginx/rules/rules.conf:ro
      - ./frontend/src:/usr/share/nginx/html:ro
    environment:
      - PROXY=1
    restart: always
    image: owasp/modsecurity-crs:nginx-alpine
    depends_on:
      - backend

volumes:
  postgres_data:
  vault-volume:
